import numpy as np
from scipy.signal import welch, spectrogram
import matplotlib.pyplot as plt
n = len(signal)

freqs = np.fft.rfftfreq(n, d=1/fs)

fft_vals = np.abs(np.fft.rfft(signal))


peak_idx = np.argmax(fft_vals)
peak_freq = freqs[peak_idx]
print(f"Peak frequency: {peak_freq:.1f} Hz")


f_w, Pxx = welch(signal, fs=fs, nperseg=1024)
plt.figure(figsize=(8, 3))
plt.semilogy(f_w, Pxx)
plt.title("Power spectral density (Welch)")
plt.xlabel("Frequency [Hz]")
plt.ylabel("PSD [V²/Hz]")
plt.tight_layout()


# nperseg: ；noverlap: 
f_s, t_s, Sxx = spectrogram(signal, fs=fs, nperseg=256, noverlap=128)

plt.figure(figsize=(8, 4))

plt.pcolormesh(t_s, f_s, 10 * np.log10(Sxx), shading='gouraud')
plt.title(" (Spectrogram)")
plt.ylabel("frequency[Hz]")
plt.xlabel("time[s]")
cbar = plt.colorbar(label='Power spectrum(dB)')
plt.tight_layout()

plt.show()
